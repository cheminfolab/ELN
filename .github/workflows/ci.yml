name: Django Unit Tests
on: [push]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    environment: development
    strategy:
      max-parallel: 4
      matrix:
        os: ["macos-latest"]  # ["macos-10.15", "ubuntu-latest", "windows-latest"]
        python-version: ["3.10.5"]

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up miniconda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        activate-environment: testenv
        environment-file: environment.yml
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false

    - name: Conda status
      shell: bash -l {0}
      run: |
        conda info
        conda list

    - name: Create .env file
      shell: bash -l {0}
      run: |
        touch .env
        echo SECRET_KEY = ${{ secrets.DJANGO_SECRET_KEY }} >> backend/.env
        echo DEBUG = True >> backend/.env
        echo ALLOWED_HOSTS = "127.0.0.1, " >> backend/.env
        echo TIME_ZONE = 'Europe/Berlin' >> backend/.env
        echo DB_NAME = 'userinterface_db' >> backend/.env
        echo DB_USER = ${{ secrets.POSTGRES_USER }} >> backend/.env
        echo DB_PASSWORD = ${{ secrets.POSTGRES_PASSWORD }} >> backend/.env
        echo DB_HOST = 'localhost' >> backend/.env
        echo DB_PORT = '5432' >> backend/.env
        echo CORS_ALLOW_ALL_ORIGINS = True >> backend/.env
        echo CORS_ALLOWED_ORIGINS = '127.0.0.1, ' >> backend/.env
        cat backend/.env
      # todo: fix var types (str)

    # - name: Set up (postgres) database

    - name: Run django unit tests
      shell: bash -l {0}
      run: |
        python3 backend/manage.py test
